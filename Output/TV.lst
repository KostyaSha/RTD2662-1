C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TV
OBJECT MODULE PLACED IN .\Output\TV.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TV\TV.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Output\TV
                    -.lst) OBJECT(.\Output\TV.obj)

stmt level    source

   1          #include "Core\Header\Include.h"
   2          
   3          
   4          #if(_VIDEO_TV_SUPPORT == _OFF)
              BYTE idata ucTVType             = _NORMAL_TV_TYPE;
              #endif
   7          
   8          #if(_VIDEO_TV_SUPPORT)
   9          #if(_TV_AFC)            
              BYTE AFCState                      = 0;
              WORD CurrAFCFreq              = 0;
              #endif
  13          BYTE idata ucTVType             = _NORMAL_TV_TYPE;
  14          bit bChangeChannel              = 0;
  15          BYTE xdata ucPrevChannel        = 0;
  16          WORD xdata ucCurrentInputNumber = 0;
  17          BYTE xdata ucCurrentInputState  = 0;           
  18          BYTE xdata ucAudioState         = 1;
  19          BYTE xdata ucAddrIfPllDM        = _ADDR_IfPllDM;
  20          
  21          
  22          #if(_IF_PLL_DE_CHIP == _IF_PLL_DE_1338 || _IF_PLL_DE_CHIP == _IF_PLL_DE_135X)
              bit bFM = 0;
              #endif
  25          
  26          //WORD CLoadChannelFreq(const BYTE ucCurrentChannel);
  27          //void CSaveChannelFreq(const WORD iFreq, const BYTE ucCurrentChannel);
  28          
  29          
  30          
  31          //==========================================================================
  32          //                      CDetectTVSignalType
  33          //==========================================================================
  34          BYTE CDetectTVSignalType(void)
  35          {
  36   1      #if(_NTSC_SEARCH_TABLE)
              
                  CVideoSoftReset();
                  CTimerDelayXms(100);
              
                  if (kx_CVideoModeLocked())  // Horizontal Lock
                       return 1;
              #else
  44   1      
  45   1          BYTE ucTemp;
  46   1                    
  47   1          for(ucTemp = 0; ucTemp < 4; ucTemp++)
  48   1          {
  49   2              if (kx_CVideoModeLocked())  // Horizontal Lock
  50   2                   return 1;
  51   2      
  52   2              CTimerDelayXms(50);
  53   2          }
  54   1      
C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 2   

  55   1      #endif
  56   1      
  57   1          // No video detected or h/v sync not locked
  58   1           return 0;  
  59   1      }
  60          
  61                
  62          //==========================================================================
  63          //                        CModeResetTVMode
  64          //==========================================================================
  65          void CModeResetTVMode(void)  // eric 1130 add for change tv channel bug
  66          {         
  67   1          TVNoSignalCount = 0;
  68   1          TVSignalCount   = 0;
  69   1          bBuleBackGround = 0;
  70   1      #if(1)
  71   1         #if(0)
               //   CPowerLightPowerOff();
                  CLR_LIGHTPOWERSTATUS();
                      // force to background
                  CAdjustBackgroundColor(0x00, 0x00, 0x00);     
                      CScalerSetBit(_VDISP_CTRL_28, 0xf7, _BIT5);     // Display output is forced to the background color,and free 
             -run
                      CTimerWaitForEvent(_EVENT_DEN_STOP);              
                      CAdjustDisableWatchDog(_WD_ALL);                        // Disable watch dog
                      CScalerSetByte(_HOST_CTRL_01, 0x40);
                      CScalerSetBit(_VGIP_CTRL_10, ~(_BIT1 | _BIT0), 0x00);
                      CScalerSetByte(_VGIP_SIGINV_11, 0x00);
                  
                  CScalerSetByte(_VGIP_DELAY_CTRL_12, 0x00); //731301 
                  CScalerPageSelect(_PAGE2);
                      CScalerSetBit(_P2_Z0_CALIBRATION_CTRL_AC, ~_BIT6, _BIT6); //V305 modify    
                  CScalerPageSelect(_PAGE2);
                      CScalerSetByte(_P2_TMDS_OUTPUT_CTRL_A6, 0x78);          //Auto Output Disable
                      CScalerSetByte(_P2_POWER_ON_OFF_CTRL_A7, 0x0F); //Input Channel ctrl by auto func(Manual)                
                      CModeAutoMeasureOff();                                          // Disable auto measure
                      CMiscClearStatusRegister();  
                  ucSearchCount  = 1;
                  bChangeChannel = 1;
                      
                  ucCurrState  = _SEARCH_STATE; 
                 #else
  96   1       //   CPowerLightPowerOff();
  97   1          CLR_LIGHTPOWERSTATUS();
  98   1          SET_OSD_READYFORDISPLAY();
  99   1      
 100   1      #if(_CHANGE_CHANNEL_DISP_MTD == _CHANGE_CHANNEL_DISP_M1)
                      //CScalerSetBit(_VDISP_CTRL_28, ~(_BIT3), 0x00);        
              #elif(_CHANGE_CHANNEL_DISP_MTD == _CHANGE_CHANNEL_DISP_M2)
                  CAdjustBackgroundColor(0x00, 0x00, 0xff);
                      CScalerSetBit(_VDISP_CTRL_28, ~(_BIT5), _BIT5); 
              #else     
 106   1          CAdjustBackgroundColor(0x00, 0x00, 0x00);
 107   1              CScalerSetBit(_VDISP_CTRL_28, ~(_BIT5), _BIT5); 
 108   1      #endif
 109   1      
 110   1          ucSearchCount  = 150;  // 1
 111   1          bChangeChannel = 1;
 112   1          bTVNoSignal    = 0;
 113   1         #endif
 114   1              
 115   1      #else
C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 3   

                               
                  CLR_LIGHTPOWERSTATUS();
                  CAdjustBackgroundColor(0x00, 0x00, 0x00);     
                      CScalerSetBit(_VDISP_CTRL_28, ~(_BIT5|_BIT3), _BIT5);   // Display output is forced to the background color
             -,and free run
                  ucSearchCount  = 1;
                  bChangeChannel = 1;
              
              #endif
 124   1      }                                                        
 125          
 126          //==========================================================================
 127          //                            CChangeChannel
 128          //==========================================================================
 129          void CChangeChannel(bit bNext)
 130          {
 131   1          BYTE ucmaxchannel = _GET_MAX_CHANNEL();
 132   1      
 133   1          COsdDispOsdTimerEvent();
 134   1      #if (_OSD_TYPE == _OSD003)
 135   1          bDrawMute = 0;
 136   1      #endif
 137   1      
 138   1          if (stTvInfo.CurChn > ucmaxchannel)
 139   1          {
 140   2              ucPrevChannel   = 1;
 141   2              stTvInfo.CurChn = 1;
 142   2              return;
 143   2          }
 144   1                    
 145   1          CMuteOn();
 146   1      #if(_FM_DEVICE)
                  if (1 == bFM)
                  {
                      ucPrevChannel =  stTvInfo.ucFMCurrCh;
                  }
                  else
              #endif
 153   1          {
 154   2              ucPrevChannel =  stTvInfo.CurChn;
 155   2              CModeResetTVMode();
 156   2          }
 157   1      
 158   1              do
 159   1              {
 160   2             if (bNext)  // Change next channel
 161   2                 stTvInfo.CurChn = (stTvInfo.CurChn == ucmaxchannel) ? 1 : (stTvInfo.CurChn+1);
 162   2             else        // Change prev channel
 163   2                 stTvInfo.CurChn = (stTvInfo.CurChn == 1) ? ucmaxchannel : (stTvInfo.CurChn-1);
 164   2          
 165   2             CLoadTVModeData(stTvInfo.CurChn);
 166   2      
 167   2                 if (!_GET_CH_SKIP() || stTvInfo.CurChn == ucPrevChannel)
 168   2                      break;
 169   2              }
 170   1              while(1);
 171   1      
 172   1          CTimerDelayXms(200);
 173   1          CSetTVChannel(stTvInfo.CurChn); 
 174   1          CTimerDelayXms(180);
 175   1          CEepromSaveTvData();
 176   1          // EricLee 081117 add for change channel have some noise
C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 4   

 177   1          //CTimerDelayXms(200);
 178   1         // CShowTVNumber(stTvInfo.CurChn, _SHOW_CH_TV_NUMBER | _SHOW_CH_TV_TYPE);
 179   1      }
 180          
 181          //==========================================================================
 182          //bSearchAction:   0 --> Tuning down
 183          //                 1 --> Tuning up
 184          //==========================================================================
 185          void CTuningCurrentChannel(const bit bSearchAction, const BYTE ucCurrentChannel) small
 186          {
 187   1          WORD iFreq;
 188   1      
 189   1          CLoadTVModeData(ucCurrentChannel);
 190   1          if ((_GET_CH_FREQ() < _MIN_FREQ || _GET_CH_FREQ() > _MAX_FREQ) && 0 == _GET_MAX_CHANNEL())
 191   1              _SET_CH_FREQ((WORD)_MIN_FREQ);
 192   1      
 193   1          iFreq = _GET_CH_FREQ();
 194   1      
 195   1          if (bSearchAction) // Tuning up
 196   1          {
 197   2      #if (_FM_DEVICE)
                      if (((iFreq < _MAX_FREQ) && 0 == bFM) || ((iFreq < _FM_MAX_FREQ) && 1 == bFM))
              #else
 200   2              if (iFreq < _MAX_FREQ)
 201   2      #endif
 202   2                  iFreq++;
 203   2          }
 204   1          else  // Tuning down
 205   1          {
 206   2      #if (_FM_DEVICE)
                      if (((iFreq > _MIN_FREQ) && 0 == bFM) || ((iFreq > _FM_MIN_FREQ) && 1 == bFM))
              #else
 209   2              if (iFreq > _MIN_FREQ)
 210   2      #endif
 211   2                  iFreq--;
 212   2          }
 213   1      
 214   1          kx_CSetTuner(_ADDR_TUNER, iFreq); 
 215   1          _SET_CH_FREQ(iFreq);
 216   1          CSaveTVModeData(ucCurrentChannel);
 217   1      }
 218          
 219          //==========================================================================
 220          //                          CInitTV
 221          //==========================================================================
 222          void CInitTV(void)
 223          {
 224   1          TUNER_PWR_ON();
 225   1      #if(_IF_PLL_DE_CHIP == _IF_PLL_DE_1338 || _IF_PLL_DE_CHIP == _IF_PLL_DE_135X)
                  CInitialTB1338();
              #endif
 228   1      
 229   1          CSetTVChannel(stTvInfo.CurChn);
 230   1          ucPrevChannel = stTvInfo.CurChn;
 231   1          CSetTvColor(ucTVType);
 232   1          CTimerDelayXms(100); 
 233   1      }
 234          
 235          #if((_TV_CHIP != _TV_JS_6B1) && (_TV_CHIP != _TV_JS_6B2) && (_TV_CHIP != _TNJ_8355))  
 236          //---------------------------------------------------------------------------
 237          #define _TV_SIGNAL_NOISE       0x90
 238          #define _TV_AUDIO_COUNT        (_VIDEO_SEARCH_COUNT/2)
C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 5   

 239          void CAudioCtrl(void)
 240          {
 241   1          bit bSignalNoise = 0;
 242   1      
 243   1          if (_GET_INPUT_SOURCE() != _SOURCE_VIDEO_TV)
 244   1              return;
 245   1       
 246   1          if (ucTVNoise > _TV_SIGNAL_NOISE)
 247   1              bSignalNoise = 1;
 248   1      
 249   1          if ((bSignalNoise == 1) && (ucAudioState == 0))
 250   1              ucAudioState = 1;
 251   1      
 252   1          if (ucAudioState == 0)
 253   1          {
 254   2              ucAudioState--;
 255   2              }
 256   1          else
 257   1          {
 258   2              ucAudioState++;
 259   2          }
 260   1              
 261   1          if (ucAudioState < _TV_AUDIO_COUNT)  // 250                    
 262   1              return;
 263   1      
 264   1      #if(_FM_DEVICE)
                  if ((bSignalNoise == 1) && bFM == 0)  // TV no signal
              #else
 267   1          if (bSignalNoise == 1)
 268   1      #endif
 269   1          {
 270   2              CMuteOn();
 271   2          }
 272   1          else      
 273   1          {
 274   2              CSetVolume();
 275   2              }
 276   1          ucAudioState = 0;
 277   1      }
 278          #endif
 279          
 280          #if(_IF_PLL_DE_CHIP == _IF_PLL_DE_1338 || _IF_PLL_DE_CHIP == _IF_PLL_DE_135X)  
              //---------------------------------------------------------------------------
              #if(_FM_DEVICE)
              void CChangeFM(void)
              {
                  CMuteOn();
                  if (bFM)
                  {                
                      CInitialTB1338();
                      CTimerDelayXms(10);
                      CFMInit();
                      CSetTVChannel(stTvInfo.ucFMCurrCh);
                      CInitSoundChannel(_SOURCE_VIDEO_TV);
                  }
                  else
                  {
                      if (_SOURCE_VIDEO_TV == _GET_INPUT_SOURCE())
                         CInitTV();
              
                      CInitSoundChannel(_GET_INPUT_SOURCE());
                  }
C51 COMPILER V7.06   TV                                                                    04/29/2010 18:06:09 PAGE 6   

              
                  CTimerDelayXms(100);
                  CSetVolume();
              }
              #endif
              #endif
 307              
 308          //---------------------------------------------------------------------------
 309          
 310            
 311          #endif
 312          
 313          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =      1    ----
   BIT SIZE         =      1       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
